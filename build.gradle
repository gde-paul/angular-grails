import org.grails.gradle.plugin.tasks.GrailsTask

buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'org.grails:grails-gradle-plugin:2.1.0'
		classpath 'com.moowork.gradle:gradle-node-plugin:0.6'
	}
}

project.ext {
	warFile = file('angular-grails.war')
	jasmineDependencies = ['karma', 'karma-jasmine', 'karma-chrome-launcher']
	karmaExec = file('node_modules/karma/bin/karma')
	karmaConfig = 'test/js/karma.conf.js'
}

version '0.8'
group 'com.craigburke.angular'

apply plugin: 'grails'
apply plugin: 'com.moowork.node'

repositories {
	grails.central()
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

grails {
	grailsVersion = '2.4.3'
	groovyVersion = '2.3.6'
}

node {
	version = '0.11.13'
	distBaseUrl = 'http://nodejs.org/dist'
	download = true
	workDir = file("${project.buildDir}/nodejs")
}

clean {
	delete warFile
	delete file('node_modules')
}

war {
	outputFile = warFile
	env = 'production'
}

task debug(type: GrailsTask) {
        command = 'run-app'
        jvmOptions {
                jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,address=5005'
        }
}

tasks.withType(GrailsTask) {
	jvmOptions {
		minHeapSize = '1g'
		maxHeapSize = '1g'
		jvmArgs "-XX:MaxPermSize=512m" 
	}
}

task setupJasmine(type: NpmTask) {
	outputs.dir file('node_modules')
	args = ['install'] + jasmineDependencies
}

task jasmineRun(type: NodeTask, dependsOn: 'setupJasmine') {
	script = karmaExec
	args = ['start', karmaConfig, '--single-run']
}

task jasmineWatch(type: NodeTask, dependsOn: 'setupJasmine') {
        script = karmaExec
        args = ['start', karmaConfig]
}

test.dependsOn jasmineRun

dependencies {
	springloaded 'org.springframework:springloaded:1.1.5.RELEASE@jar'

  	String gebVersion = '0.9.2'
	String seleniumVersion = '2.42.2'

	test "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
	test "org.gebish:geb-spock:$gebVersion"
	test "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"

	def plugins = [
		[name: 'tomcat', version: '7.0.55', scope: 'bootstrap'],
		[name: 'scaffolding', version: '2.1.2'],
		[name: 'cache', version: '1.1.6'],
		[name: 'asset-pipeline', version: '1.9.9'],
		[name: 'fields', version: '1.3'],
		[name: 'sass-asset-pipeline', version: '1.9.0'],
		[name: 'angular-template-asset-pipeline', version: '1.3.0'],
		[name: 'angular-annotate-asset-pipeline', version: '1.1.1'],
		[name: 'geb', version: gebVersion, scope: 'test']
	]

	plugins.each { plugin ->
		String scope = plugin.scope ?: 'compile'
		owner."$scope" "org.grails.plugins:${plugin.name}:${plugin.version}"
	}
	
	runtime('org.grails.plugins:hibernate4:4.1.11.7') {
    		exclude module: 'xml-apis'
	}
}
